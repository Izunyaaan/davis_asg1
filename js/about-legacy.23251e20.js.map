{"version":3,"file":"js/about-legacy.23251e20.js","mappings":"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","sources":["webpack://asg1/../../../src/components/VTextField/index.ts","webpack://asg1/../../../src/components/VFileInput/VFileInput.ts","webpack://asg1/./src/views/LoadCSV.vue?012d","webpack://asg1/src/views/LoadCSV.vue","webpack://asg1/./src/views/LoadCSV.vue?0723","webpack://asg1/./src/views/LoadCSV.vue","webpack://asg1/./src/views/PreloadedAPI.vue?0b36","webpack://asg1/src/views/PreloadedAPI.vue","webpack://asg1/./src/views/PreloadedAPI.vue?9b6d","webpack://asg1/./src/views/PreloadedAPI.vue"],"sourcesContent":["import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    multiple: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.multiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.multiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.multiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.attrs!.multiple = this.multiple\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.multiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.parsedCSVFile)?_c('div',[_c('h1',{attrs:{\"width\":\"\"}},[_vm._v(\"Generate some charts\")]),_c('div',{staticClass:\"d-flex flex-wrap\"},[_c('LoadingScreen',{attrs:{\"isLoading\":_vm.isLoading}}),_c('v-card',{attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Controls\")]),_c('v-card',{attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"3\"}},[_c('v-card-subtitle',[_vm._v(\" Display Charts \")]),_c('v-card-actions',{staticClass:\"d-flex align-start\"},_vm._l((_vm.renderChart),function(chart,index){return _c('v-checkbox',{key:index,staticClass:\"ma-0\",attrs:{\"label\":chart.chart},model:{value:(chart.visible),callback:function ($$v) {_vm.$set(chart, \"visible\", $$v)},expression:\"chart.visible\"}})}),1)],1),_c('v-card',{attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"3\"}},[_c('v-card-title',[_vm._v(\" Select Class \")]),_c('v-card-actions',{staticClass:\"d-flex align-start\"},[_c('v-select',{attrs:{\"items\":_vm.labels,\"item-text\":\"name\"},on:{\"change\":_vm.redrawCharts},model:{value:(_vm.selectedClass),callback:function ($$v) {_vm.selectedClass=$$v},expression:\"selectedClass\"}})],1)],1),_c('v-card',{attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"3\"}},[_c('v-card-title',[_vm._v(\" Select Axis \")]),_c('v-card-actions',{staticClass:\"d-flex align-start\"},[_vm._v(\" X:\"),_c('v-select',{attrs:{\"items\":_vm.labels},on:{\"change\":_vm.redrawCharts},model:{value:(_vm.selectedX),callback:function ($$v) {_vm.selectedX=$$v},expression:\"selectedX\"}}),_vm._v(\" Y:\"),_c('v-select',{attrs:{\"items\":_vm.labels},on:{\"change\":_vm.redrawCharts},model:{value:(_vm.selectedY),callback:function ($$v) {_vm.selectedY=$$v},expression:\"selectedY\"}})],1)],1)],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.renderChart[0].visible),expression:\"renderChart[0].visible\"}],staticStyle:{\"overflow\":\"auto\"},attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Table\")]),_c('Plotly',{attrs:{\"data\":_vm.graphData.table.data,\"layout\":_vm.graphData.table.layout,\"display-mode-bar\":false}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.renderChart[1].visible),expression:\"renderChart[1].visible\"}],attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Scatter\")]),_c('Plotly',{attrs:{\"data\":_vm.graphData.scatter.data,\"layout\":_vm.graphData.scatter.layout,\"display-mode-bar\":false}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.renderChart[2].visible),expression:\"renderChart[2].visible\"}],attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Histogram\")]),_c('Plotly',{attrs:{\"data\":_vm.graphData.bar.data,\"layout\":_vm.graphData.bar.layout,\"display-mode-bar\":false}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.renderChart[3].visible),expression:\"renderChart[3].visible\"}],attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Pie\")]),_c('Plotly',{attrs:{\"data\":_vm.graphData.pie.data,\"display-mode-bar\":false}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.renderChart[4].visible),expression:\"renderChart[4].visible\"}],attrs:{\"outlined\":\"\",\"tile\":\"\",\"elevation\":\"5\",\"width\":\"33%\",\"min-width\":\"350px\"}},[_c('v-card-title',[_vm._v(\"Line\")]),_c('Plotly',{attrs:{\"data\":_vm.graphData.line.data,\"layout\":_vm.graphData.line.layout,\"display-mode-bar\":false}})],1)],1)]):_c('div',[_c('v-file-input',{attrs:{\"accept\":\"text/csv\",\"label\":\"Choose a file...\"},on:{\"change\":_vm.parseInput}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div v-if=\"parsedCSVFile\">\r\n      <h1 width=\"\">Generate some charts</h1>\r\n      <div class=\"d-flex flex-wrap\">\r\n        <LoadingScreen :isLoading=\"isLoading\" />\r\n\r\n        <!-- Controls -->\r\n        <v-card outlined tile elevation=\"5\" width=\"33%\" min-width=\"350px\">\r\n          <v-card-title>Controls</v-card-title>\r\n          <v-card outlined tile elevation=\"3\">\r\n            <v-card-subtitle> Display Charts </v-card-subtitle>\r\n            <v-card-actions class=\"d-flex align-start\">\r\n              <v-checkbox\r\n                v-for=\"(chart, index) in renderChart\"\r\n                :key=\"index\"\r\n                v-model=\"chart.visible\"\r\n                :label=\"chart.chart\"\r\n                class=\"ma-0\"\r\n              ></v-checkbox>\r\n            </v-card-actions>\r\n          </v-card>\r\n          <v-card outlined tile elevation=\"3\">\r\n            <v-card-title> Select Class </v-card-title>\r\n            <v-card-actions class=\"d-flex align-start\">\r\n              <v-select\r\n                :items=\"labels\"\r\n                item-text=\"name\"\r\n                v-model=\"selectedClass\"\r\n                @change=\"redrawCharts\"\r\n              ></v-select>\r\n            </v-card-actions>\r\n          </v-card>\r\n          <v-card outlined tile elevation=\"3\">\r\n            <v-card-title> Select Axis </v-card-title>\r\n            <v-card-actions class=\"d-flex align-start\">\r\n              X:<v-select\r\n                :items=\"labels\"\r\n                v-model=\"selectedX\"\r\n                @change=\"redrawCharts\"\r\n              ></v-select>\r\n              Y:<v-select\r\n                :items=\"labels\"\r\n                v-model=\"selectedY\"\r\n                @change=\"redrawCharts\"\r\n              ></v-select>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-card>\r\n\r\n        <!-- Table -->\r\n        <v-card\r\n          outlined\r\n          tile\r\n          elevation=\"5\"\r\n          width=\"33%\"\r\n          min-width=\"350px\"\r\n          style=\"overflow: auto\"\r\n          v-show=\"renderChart[0].visible\"\r\n        >\r\n          <v-card-title>Table</v-card-title>\r\n          <Plotly\r\n            :data=\"graphData.table.data\"\r\n            :layout=\"graphData.table.layout\"\r\n            :display-mode-bar=\"false\"\r\n          ></Plotly>\r\n        </v-card>\r\n\r\n        <!-- Scatter -->\r\n        <v-card\r\n          outlined\r\n          tile\r\n          elevation=\"5\"\r\n          width=\"33%\"\r\n          min-width=\"350px\"\r\n          v-show=\"renderChart[1].visible\"\r\n        >\r\n          <v-card-title>Scatter</v-card-title>\r\n          <Plotly\r\n            :data=\"graphData.scatter.data\"\r\n            :layout=\"graphData.scatter.layout\"\r\n            :display-mode-bar=\"false\"\r\n          ></Plotly>\r\n        </v-card>\r\n\r\n        <!-- Bar -->\r\n        <v-card\r\n          outlined\r\n          tile\r\n          elevation=\"5\"\r\n          width=\"33%\"\r\n          min-width=\"350px\"\r\n          v-show=\"renderChart[2].visible\"\r\n        >\r\n          <v-card-title>Histogram</v-card-title>\r\n          <Plotly\r\n            :data=\"graphData.bar.data\"\r\n            :layout=\"graphData.bar.layout\"\r\n            :display-mode-bar=\"false\"\r\n          ></Plotly>\r\n        </v-card>\r\n\r\n        <!-- Pie -->\r\n        <v-card\r\n          outlined\r\n          tile\r\n          elevation=\"5\"\r\n          width=\"33%\"\r\n          min-width=\"350px\"\r\n          v-show=\"renderChart[3].visible\"\r\n        >\r\n          <v-card-title>Pie</v-card-title>\r\n          <Plotly :data=\"graphData.pie.data\" :display-mode-bar=\"false\"></Plotly>\r\n        </v-card>\r\n\r\n        <!-- Line -->\r\n        <v-card\r\n          outlined\r\n          tile\r\n          elevation=\"5\"\r\n          width=\"33%\"\r\n          min-width=\"350px\"\r\n          v-show=\"renderChart[4].visible\"\r\n        >\r\n          <v-card-title>Line</v-card-title>\r\n          <Plotly\r\n            :data=\"graphData.line.data\"\r\n            :layout=\"graphData.line.layout\"\r\n            :display-mode-bar=\"false\"\r\n          ></Plotly>\r\n        </v-card>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <v-file-input\r\n        accept=\"text/csv\"\r\n        @change=\"parseInput\"\r\n        label=\"Choose a file...\"\r\n      ></v-file-input>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Plotly } from \"vue-plotly\";\r\nimport LoadingScreen from \"../components/LoadingScreen.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Plotly,\r\n    LoadingScreen,\r\n  },\r\n  data: () => ({\r\n    isLoading: true,\r\n    dataFile: null,\r\n    renderChart: [\r\n      { chart: \"Table\", visible: true },\r\n      { chart: \"Scatter\", visible: true },\r\n      { chart: \"Bar\", visible: true },\r\n      { chart: \"Pie\", visible: true },\r\n      { chart: \"Line\", visible: true },\r\n    ],\r\n    labels: [],\r\n    selectedClass: \"\",\r\n    selectedX: \"\",\r\n    selectedY: \"\",\r\n    parsedCSVFile: \"\",\r\n    graphData: {\r\n      table: {\r\n        data: [\r\n          {\r\n            type: \"table\",\r\n            header: {\r\n              values: [],\r\n              align: \"center\",\r\n              fill: { color: \"grey\" },\r\n              font: { color: \"white\" },\r\n            },\r\n            cells: {\r\n              values: [],\r\n              align: \"center\",\r\n            },\r\n          },\r\n        ],\r\n        layout: {\r\n          autosize: false,\r\n        },\r\n      },\r\n      scatter: {\r\n        data: [\r\n          {\r\n            x: [],\r\n            y: [],\r\n            type: \"scatter\",\r\n            mode: \"markers\",\r\n          },\r\n        ],\r\n        layout: {\r\n          autosize: true,\r\n          xaxis: {\r\n            title: {\r\n              text: \"\",\r\n            },\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: \"\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      bar: {\r\n        data: [],\r\n        layout: {\r\n          autosize: true,\r\n          xaxis: {\r\n            title: {\r\n              text: \"Class\",\r\n            },\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: \"Dimensions\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      pie: {\r\n        data: [\r\n          {\r\n            values: [],\r\n            labels: [],\r\n            type: \"pie\",\r\n          },\r\n        ],\r\n        layout: {},\r\n      },\r\n      line: {\r\n        data: [],\r\n        layout: {\r\n          autosize: true,\r\n          xaxis: {\r\n            title: {\r\n              text: \"\",\r\n            },\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: \"\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  methods: {\r\n    parseInput(input) {\r\n      const reader = new FileReader();\r\n      reader.readAsText(input);\r\n      reader.onload = (a) => {\r\n        this.parsedCSVFile = a.target.result;\r\n        this.parseIntoTable(this.parsedCSVFile);\r\n        this.redrawCharts(this.parsedCSVFile);\r\n        console.log(this.parsedCSVFile);\r\n      };\r\n    },\r\n    loadCSVData(url) {\r\n      // Simple GET request\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n      };\r\n      return fetch(url, requestOptions).then((response) => response.text());\r\n    },\r\n\r\n    parseIntoTable(data) {\r\n      let dataArr = data.split(/\\r?\\n/);\r\n      dataArr.forEach((item, index) => {\r\n        if (index === 0) {\r\n          //split row\r\n          let rowArr = item.split(\",\");\r\n          //populate header\r\n          this.graphData.table.data[0].header.values = rowArr;\r\n          for (let i = 0; i < rowArr.length; i++) {\r\n            this.graphData.table.data[0].cells.values.push([]);\r\n            this.labels.push(rowArr[i]);\r\n          }\r\n          this.selectedX = rowArr[1];\r\n          this.selectedY = rowArr[2];\r\n          this.selectedClass = rowArr[rowArr.length - 1];\r\n        } else if (index < dataArr.length - 1) {\r\n          //populate cells\r\n          let rowArr = item.split(\",\");\r\n          rowArr.forEach((rowItem, rowIndex) => {\r\n            this.graphData.table.data[0].cells.values[rowIndex].push(rowItem);\r\n          });\r\n        }\r\n      });\r\n    },\r\n    parseIntoScatter(data) {\r\n      let dataArr = data.split(/\\r?\\n/);\r\n      let headers = dataArr[0].split(\",\");\r\n      let labelIndex, xIndex, yIndex;\r\n      let labels = [];\r\n      let chartData = [];\r\n      headers.forEach((item, index) => {\r\n        if (item == this.selectedClass) {\r\n          labelIndex = index;\r\n        }\r\n        if (item == this.selectedX) {\r\n          xIndex = index;\r\n          this.graphData.scatter.layout.xaxis.title.text = item;\r\n        }\r\n        if (item == this.selectedY) {\r\n          yIndex = index;\r\n          this.graphData.scatter.layout.yaxis.title.text = item;\r\n        }\r\n      });\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        if (!labels.includes(rowArr[labelIndex])) {\r\n          labels.push(rowArr[labelIndex]);\r\n          chartData.push({\r\n            name: rowArr[labelIndex],\r\n            x: [],\r\n            y: [],\r\n            mode: \"markers\",\r\n            type: \"scatter\",\r\n          });\r\n        }\r\n      }\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        chartData[labels.indexOf(rowArr[labelIndex])].x.push(rowArr[xIndex]);\r\n        chartData[labels.indexOf(rowArr[labelIndex])].y.push(rowArr[yIndex]);\r\n      }\r\n      this.graphData.scatter.data = chartData;\r\n    },\r\n    parseIntoBar(data) {\r\n      let dataArr = data.split(/\\r?\\n/);\r\n      let headers = dataArr[0].split(\",\");\r\n      let labelIndex, xIndex, yIndex;\r\n      let labels = [];\r\n      let chartData = [];\r\n      headers.forEach((item, index) => {\r\n        if (item == this.selectedClass) {\r\n          labelIndex = index;\r\n        }\r\n        if (item == this.selectedX) {\r\n          xIndex = index;\r\n          this.graphData.bar.layout.xaxis.title.text = item;\r\n        }\r\n        if (item == this.selectedY) {\r\n          yIndex = index;\r\n          this.graphData.bar.layout.yaxis.title.text = item;\r\n        }\r\n      });\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        if (!labels.includes(rowArr[labelIndex])) {\r\n          labels.push(rowArr[labelIndex]);\r\n          chartData.push({\r\n            name: rowArr[labelIndex],\r\n            x: [],\r\n            y: [],\r\n            type: \"bar\",\r\n          });\r\n        }\r\n      }\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        chartData[labels.indexOf(rowArr[labelIndex])].x.push(rowArr[xIndex]);\r\n        chartData[labels.indexOf(rowArr[labelIndex])].y.push(rowArr[yIndex]);\r\n      }\r\n      this.graphData.bar.data = chartData;\r\n    },\r\n    parseIntoPie(data) {\r\n      let dataArr = data.split(/\\r?\\n/);\r\n      let headers = dataArr[0].split(\",\");\r\n      let labelIndex;\r\n      let labels = [];\r\n      let labelCount = [];\r\n      headers.forEach((item, index) => {\r\n        if (item == this.selectedClass) {\r\n          labelIndex = index;\r\n        }\r\n      });\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        if (labels.includes(rowArr[labelIndex])) {\r\n          let rowIndex = labels.indexOf(rowArr[labelIndex]);\r\n          labelCount[rowIndex] += 1;\r\n        } else {\r\n          labels.push(rowArr[labelIndex]);\r\n          labelCount.push(1);\r\n        }\r\n      }\r\n      this.graphData.pie.data[0].values = labelCount;\r\n      this.graphData.pie.data[0].labels = labels;\r\n    },\r\n    parseIntoLine(data) {\r\n      let dataArr = data.split(/\\r?\\n/);\r\n      let headers = dataArr[0].split(\",\");\r\n      let labelIndex, xIndex, yIndex;\r\n      let labels = [];\r\n      let chartData = [];\r\n      headers.forEach((item, index) => {\r\n        if (item == this.selectedClass) {\r\n          labelIndex = index;\r\n        }\r\n        if (item == this.selectedX) {\r\n          xIndex = index;\r\n          this.graphData.line.layout.xaxis.title.text = item;\r\n        }\r\n        if (item == this.selectedY) {\r\n          yIndex = index;\r\n          this.graphData.line.layout.yaxis.title.text = item;\r\n        }\r\n      });\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        if (!labels.includes(rowArr[labelIndex])) {\r\n          labels.push(rowArr[labelIndex]);\r\n          chartData.push({\r\n            name: rowArr[labelIndex],\r\n            x: [],\r\n            y: [],\r\n            type: \"scatter\",\r\n          });\r\n        }\r\n      }\r\n      for (let i = 1; i < dataArr.length - 1; i++) {\r\n        let rowArr = dataArr[i].split(\",\");\r\n        chartData[labels.indexOf(rowArr[labelIndex])].x.push(rowArr[xIndex]);\r\n        chartData[labels.indexOf(rowArr[labelIndex])].y.push(rowArr[yIndex]);\r\n      }\r\n      this.graphData.line.data = chartData;\r\n    },\r\n    redrawCharts(data) {\r\n      //Redraw logic goes here\r\n      this.isLoading = true;\r\n      //this.parseIntoTable(data);\r\n      this.parseIntoPie(data);\r\n      this.parseIntoScatter(data);\r\n      this.parseIntoLine(data);\r\n      this.parseIntoBar(data);\r\n      this.isLoading = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoadCSV.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LoadCSV.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LoadCSV.vue?vue&type=template&id=26921652&\"\nimport script from \"./LoadCSV.vue?vue&type=script&lang=js&\"\nexport * from \"./LoadCSV.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\ninstallComponents(component, {VCard,VCardActions,VCardSubtitle,VCardTitle,VCheckbox,VFileInput,VSelect})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-file-input',{attrs:{\"accept\":\"text/csv\"},on:{\"change\":_vm.atest}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <v-file-input accept=\"text/csv\" @change=\"atest\"></v-file-input>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    test: null,\n  }),\n  created() {\n    fetch(\"https://corona.lmao.ninja/v2/historical/Brunei?lastdays=30\")\n      .then((response) => response.json())\n      .then((data) => console.log(JSON.stringify(data)));\n  },\n  methods: {\n    atest: (e) => {\n      const reader = new FileReader();\n      reader.onload = (a) => console.log(a.target.result.split(/\\r?\\n/));\n\n      reader.readAsText(e);\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PreloadedAPI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PreloadedAPI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PreloadedAPI.vue?vue&type=template&id=8957d2fa&\"\nimport script from \"./PreloadedAPI.vue?vue&type=script&lang=js&\"\nexport * from \"./PreloadedAPI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\ninstallComponents(component, {VFileInput})\n"],"names":["VTextField","name","model","prop","event","props","chips","Boolean","clearable","type","default","counterSizeString","String","counterString","hideInput","multiple","placeholder","prependIcon","readonly","showSize","Number","validator","v","includes","smallChips","truncateLength","value","undefined","val","wrapInArray","every","computed","classes","this","computedCounterValue","fileCount","lazyValue","length","File","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","humanReadableFileSize","base","internalValue","get","set","$emit","isDirty","isLabelActive","text","persistentPlaceholder","isFocused","hasLabel","map","file","truncatedText","truncateText","hasChips","watch","handler","consoleError","immediate","deepEqual","$refs","input","files","methods","clearableCallback","genChips","index","$createElement","VChip","small","on","splice","genControl","render","data","style","mergeStyles","display","genInput","attrs","domProps","change","onInput","genSelections","genPrependSlot","icon","genIcon","click","genSlot","genSelectionText","counter","children","$scopedSlots","selection","forEach","push","staticClass","class","genTextFieldSlot","node","e","target","initialValue","onKeyDown","str","charsKeepOneSide","Math","floor","slice","_vm","_h","_c","_self","_v","isLoading","_l","chart","key","callback","$$v","$set","expression","labels","redrawCharts","selectedClass","selectedX","selectedY","directives","rawName","renderChart","staticStyle","graphData","table","layout","scatter","bar","pie","line","parseInput","staticRenderFns","components","Plotly","LoadingScreen","dataFile","visible","parsedCSVFile","header","values","align","fill","color","font","cells","autosize","x","y","mode","xaxis","title","yaxis","reader","readAsText","onload","console","log","loadCSVData","url","method","fetch","requestOptions","then","parseIntoTable","dataArr","rowArr","parseIntoScatter","headers","item","labelIndex","xIndex","yIndex","chartData","indexOf","parseIntoBar","parseIntoPie","labelCount","rowIndex","parseIntoLine","component","VCard","atest","test","created","VFileInput"],"sourceRoot":""}